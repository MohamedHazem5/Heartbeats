
<head>

    <style>
      
/*         .container {
            min-height: 100vh;
            display: flex;
            flex-direction: column; 
            align-items: center;
            justify-content: center; 
            padding: 1rem;
        }
 */

        .upload-card {
            background: white;
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            font-size: 1.875rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
            background: linear-gradient(to right, #48bdc5, #48bdc5);
            -webkit-background-clip: text;
            color: transparent;
        }

        .subtitle {
            text-align: center;
            color: var(--gray-500);
            margin-bottom: 2rem;
        }

        .upload-zone {
            border: 2px dashed var(--gray-300);
            border-radius: 0.75rem;
            padding: 2rem;
            text-align: center;
            cursor: pointer;
            position: relative;
            transition: all 0.3s;
        }

            .upload-zone:hover {
                border-color: var(--primary-color);
                background: var(--primary-light);
            }

        .icon-container {
            display: flex;
            justify-content: center;
            margin-bottom: 1rem;
        }

        .upload-icon {
            background: var(--primary-light);
            padding: 1rem;
            border-radius: 9999px;
            color: var(--primary-color);
            width: 3rem;
            height: 3rem;
        }

        .upload-text {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .primary-text {
            color: var(--gray-700);
            font-weight: 500;
        }

        .secondary-text {
            color: var(--gray-500);
            font-size: 0.875rem;
        }

        .image-preview {
            max-height: 12rem;
            margin: 0 auto;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s;
        }

        .preview-overlay {
            position: absolute;
            inset: 0;
            background: rgba(0, 0, 0, 0.4);
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s;
            border-radius: 0.5rem;
        }

            .preview-overlay p {
                color: white;
                font-weight: 500;
            }

        .upload-zone:hover .preview-overlay {
            opacity: 1;
        }

        .upload-zone:hover .image-preview {
            transform: scale(1.05);
        }

        .image-info {
            margin-top: 1.5rem;
            padding: 1rem;
            background: var(--gray-50);
            border-radius: 0.75rem;
            border: 1px solid rgba(0, 0, 0, 0.1);
        }

        .file-header {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding-bottom: 0.75rem;
            border-bottom: 1px solid var(--gray-300);
            margin-bottom: 0.75rem;
        }

        .info-icon {
            color: var(--primary-color);
            width: 1.25rem;
            height: 1.25rem;
        }

        .file-details {
            display: flex;
            align-items: center;
            justify-content: space-between;
            color: var(--gray-500);
            font-size: 0.875rem;
        }

        .detail {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .detail-icon {
            width: 1rem;
            height: 1rem;
        }

        .upload-button {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            width: 100%;
            margin-top: 1.5rem;
            padding: 0.75rem;
            background: gray;
            color: white;
            border: none;
            border-radius: 0.5rem;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
        }

            .upload-button:hover {
                background: rgb(72, 189 ,197);
                transform: translateY(-1px);
            }

            .upload-button:active {
                transform: translateY(0);
            }

        .button-icon {
            width: 1.25rem;
            height: 1.25rem;
        }

        .hidden {
            display: none;
        }

        .prediction-result {
            margin-top: 1rem;
            padding: 1rem;
            background: var(--primary-light);
            border-radius: 0.75rem;
            border: 1px solid var(--primary-color);
            text-align: center;
            font-weight: 500;
            color: var(--primary-color);
            font-size: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }

    </style>
    <script src="https://unpkg.com/lucide@latest"></script>
</head>
<div class="container my-5" style="align-items:center;justify-content:center" dir="rtl">
    <div class="upload-card">
        <h1>ارفع صورة العينة</h1>
        <p class="subtitle">ارفع صورة العينة هنا ليتم فحصها</p>

        <div class="upload-zone" id="uploadZone">
            <div class="upload-content">
                <div class="icon-container">
                    <i data-lucide="upload" class="upload-icon"></i>
                </div>
                <div class="upload-text">
                    <p class="primary-text">ارفع صورة العينة هنا ليتم فحصها</p>
                    <p class="secondary-text">يدعم JPG, PNG and GIF files (max 10MB)</p>
                </div>
            </div>
            <img id="imagePreview" class="image-preview hidden" alt="Preview">
            <div class="preview-overlay">
                <p>لتغير الصورة</p>
            </div>
            <input type="file" id="fileInput" accept="image/*" class="hidden">
        </div>

        <div id="imageInfo" class="image-info hidden">
            <div class="file-header">
                <i data-lucide="image" class="info-icon"></i>
                <span id="fileName"></span>
            </div>
            <div class="file-details">
                <div class="detail">
                    <i data-lucide="file-text" class="detail-icon"></i>
                    <span id="fileSize"></span>
                </div>
                <div class="detail">
                    <i data-lucide="calendar" class="detail-icon"></i>
                    <span id="uploadDate"></span>
                </div>
            </div>
        </div>

        <button id="uploadButton" class="upload-button hidden">
            <i data-lucide="upload-cloud" class="button-icon"></i>
           لاختبار العينة
        </button>
    </div>
</div>
<script>


    document.addEventListener('DOMContentLoaded', () => {
        // Initialize Lucide icons
        lucide.createIcons();

        // Elements
        const uploadZone = document.getElementById('uploadZone');
        const fileInput = document.getElementById('fileInput');
        const imagePreview = document.getElementById('imagePreview');
        const imageInfo = document.getElementById('imageInfo');
        const fileName = document.getElementById('fileName');
        const fileSize = document.getElementById('fileSize');
        const uploadDate = document.getElementById('uploadDate');
        const uploadContent = document.querySelector('.upload-content');
        const uploadButton = document.getElementById('uploadButton');
        const container = document.querySelector('.container');

        // Handle file selection
        const handleFileSelect = (file) => {
            if (!file) return;

            // Check file size (10MB limit)
            if (file.size > 10 * 1024 * 1024) {
                alert('File size must be less than 10MB');
                return;
            }

            // Check if file is an image
            if (!file.type.startsWith('image/')) {
                alert('Please select an image file');
                return;
            }

            // Update preview
            const reader = new FileReader();
            reader.onload = (e) => {
                imagePreview.src = e.target.result;
                imagePreview.classList.remove('hidden');
                uploadContent.classList.add('hidden');

                // Update file info
                fileName.textContent = file.name;
                fileSize.textContent = `${(file.size / 1024).toFixed(1)} KB`;
                uploadDate.textContent = new Date().toLocaleDateString();
                imageInfo.classList.remove('hidden');
                uploadButton.classList.remove('hidden');
            };
            reader.readAsDataURL(file);
        };

        // Upload image and get prediction
        const uploadImage = async (file) => {
            const formData = new FormData();
            formData.append('file', file);

            try {
                const response = await fetch('https://esmael-saleh-diabetic-retinopathy-detection.hf.space/predict/', {
                    method: 'POST',
                    body: formData,
                });

                if (!response.ok) {
                    throw new Error(`Error: ${response.statusText}`);
                }

                const data = await response.json();
                displayPrediction(data.predicted_class);
            } catch (error) {
                alert('حدث خطا اثناء تحميل العينة ، يرجاء المحاولة مرة اخري');
                console.error(error);
            }
        };

        // Display prediction
        const displayPrediction = (prediction) => {
            // Remove any existing prediction result
            const existingResult = document.querySelector('.prediction-result');
            if (existingResult) {
                existingResult.remove();
            }

            // Create a new prediction result div
            const resultDiv = document.createElement('div');
            resultDiv.classList.add('prediction-result');
            resultDiv.textContent = `ناتج العينة: ${prediction}`;

            // Insert the result below the upload card
            const uploadCard = document.querySelector('.upload-card');
            uploadCard.insertAdjacentElement('afterend', resultDiv);
        };


        // Event Listeners
        uploadZone.addEventListener('click', () => fileInput.click());

        fileInput.addEventListener('change', (e) => {
            const file = e.target.files[0];
            handleFileSelect(file);

            uploadButton.addEventListener('click', () => {
                uploadImage(file);
            }, { once: true });
        });

        // Drag and Drop
        uploadZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadZone.style.borderColor = 'var(--primary-color)';
            uploadZone.style.background = 'var(--primary-light)';
        });

        uploadZone.addEventListener('dragleave', (e) => {
            e.preventDefault();
            uploadZone.style.borderColor = '';
            uploadZone.style.background = '';
        });

        uploadZone.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadZone.style.borderColor = '';
            uploadZone.style.background = '';
            const file = e.dataTransfer.files[0];
            handleFileSelect(file);

            uploadButton.addEventListener('click', () => {
                uploadImage(file);
            }, { once: true });
        });
    });

</script>


